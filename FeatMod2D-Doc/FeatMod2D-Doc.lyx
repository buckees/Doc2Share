#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\noindent
The Langmuir Feature Model
\end_layout

\begin_layout Author
\noindent
Wei Tian
\end_layout

\begin_layout Address
\noindent
TSMC
\end_layout

\begin_layout Abstract
\noindent
In this document, a feature scale model is developed and used for recipe
 tuning.
 The detailed physical mechanisms and numerical algorithms are introduced
 and discussed.
\end_layout

\begin_layout Section
\noindent
Introduction
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The Langmuir Feature Model uses particle-based Monte Carlo methods to simulate
 the evolution of etch features when exposed to plasma discharges.
 The model uses pseudo-particles to represent the incoming species, including
 electron, ions and neutral particles.
 All these pseudo-particles are tracked for their trajectories and interactions
 with materials.
 The materials in the model are represented by a structured mesh of voxels
 or cubes.
 Each voxel or cube represents a macro solid material, which consists of
 hundreds of atoms or molecules.
 The mesh can be initialized in an arbitrary shape with surface conditions,
 which may include multiple materials and features within the each domain.
 This allows the simulation of complex structures and steps in the fabrication
 process, such as finFET structure.
 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
A pseudo-particle is also a macro particle, which consists of atoms or molecules
 with the same number as in the materials.
 The pseudo-particles are launched with specified flux, angle and energy,
 which are often derived from a reactor scale model, which is, within the
 Langmuir Model, the Langmuir Reactor Model.
 Without the reactor model, the Langmuir Feature Model can also self generate
 generic functions of flux, angle and energy.
 The coupling of feature scale model to reactor scale model allows the Langmuir
 Model to explore the process recipe with the etch result, or to be used
 to study fundamental physics.
 This versatility makes the Langmuir Model a strong tool for recipe tuning
 and optimization, as well as new physics investigation.
\end_layout

\begin_layout Section
\noindent
Mesh
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The mesh in Langmuir Feature Model is constructed in 2D space, in which
 
\begin_inset Formula $(x,z)$
\end_inset

 are used to represent the 2D coordinates and infinity is assumed in 
\begin_inset Formula $y$
\end_inset

 direction.
 The model discretizes the 2D space into a rectangular computational cells.
 The cell center is marked as a node, which determines the location 
\begin_inset Formula $(x,z)$
\end_inset

 of the cell.
 Each cell has a volume of 
\begin_inset Formula $\Delta x\times\Delta z$
\end_inset

, where 
\begin_inset Formula $\Delta x$
\end_inset

 and 
\begin_inset Formula $\Delta z$
\end_inset

 are the resolutions in 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 directions, respectively.
 Usually, square cells, where 
\begin_inset Formula $\Delta x=\Delta z$
\end_inset

, are used.
 Non-square cells, which are used for high aspect ratio domain for memory
 saving, need future test and validation.
 The computational complexity increases with reducing resolution as approximatel
y 
\begin_inset Formula $O(n^{3})$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of cells per side in the simulation domain.
 The choice of resolution also affects the time weighting of each pseudo-particl
e, which will be described later.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Each cell, representing a solid material, is assigned a material property.
 The most commonly used materials, Such as 
\begin_inset Formula $Si$
\end_inset

 and 
\begin_inset Formula $SiO_{2}$
\end_inset

, in the Langmuir Feature Model are pre-defined in the database coming along
 with the model.
 If not found in the database, the materials can be defined by the user.
 The materials are used for the chemical reactions.
 It is important to respect stoichiometry, and most materials are defined
 as elements or compounds to facilitate this, but there is no inherent limitatio
n on the material properties in the model.
 It means that arbitrary materials can be built upon simulation request.
 In that case, the user is responsible for the validity of the physics and
 chemistry represented by the model.
 An example of an arbitrary material definition is 
\begin_inset Quotes eld
\end_inset


\shape italic
Photo Resist
\shape default

\begin_inset Quotes erd
\end_inset

, which is commonly used as a etching mask.
 
\begin_inset Quotes eld
\end_inset


\shape italic
Photo Resist
\shape default

\begin_inset Quotes erd
\end_inset

 is a polymer with multiple elements and complicated structures, where a
 long chain of molecules could surpass the cell size.
 It is okay for these resists to have varying chemistries and properties,
 and it is not always possible or necessary to capture their stoichiometry
 accurately.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The basic element in the mesh is a cell, which is assigned a single material
 and not dividable.
 Each solid cell in the mesh is assumed to have the same atomic denisty,
 
\begin_inset Formula $\rho\;cm^{-3}$
\end_inset

, which is typically 
\begin_inset Formula $5.0\times10^{22}\;cm^{-3}$
\end_inset

 for 
\begin_inset Formula $Si$
\end_inset

 and 
\begin_inset Formula $2.3\times10^{22}\;cm^{-3}$
\end_inset

 for 
\begin_inset Formula $SiO_{2}$
\end_inset

.
 This density is a user input and used to calculate number of atoms per
 cell, 
\begin_inset Formula 
\[
N_{cell}=\Delta x\times\Delta z\times\rho
\]

\end_inset

 Because all cells contain a single (usually stoichiometric) material, but
 are represented as having the same volume and denisty, it is important
 to keep in mind that all materails in the Langmuir Feature Model represent
 average behaviors of their respective coupounds.
 The Langmuir Feature Model is designed to address the nano-scale feature
 during the fabrication process, but not able to resolve the inter-atomic
 interactions.
 To apply the model within the valid window, the user should make sure that
 
\begin_inset Formula $N_{cell}\gg1$
\end_inset

, which will not be automatically checked in the model.
 
\end_layout

\begin_layout Section
Pseudo-Particle
\end_layout

\begin_layout Subsection
Definition of the pseudo-particle
\end_layout

\begin_layout Standard
Simulating a single ion or radical coming to the feature is not practical
 due to the huge computational cost.
 During a typical etching process, the ion flux coming to the wafer is of
 
\begin_inset Formula $10^{16}\;cm^{-2}s^{-1}$
\end_inset

, while radical flux of 
\begin_inset Formula $10^{18}\;cm^{-2}s^{-1}$
\end_inset

.
 In a feature domain of 
\begin_inset Formula $100nm\times100nm$
\end_inset

 for a process of 
\begin_inset Formula $10s$
\end_inset

, there are
\begin_inset Formula $10^{7}$
\end_inset

 ions and 
\begin_inset Formula $10^{9}$
\end_inset

 radicas needed to be launched and tracked, which is clearly beyond the
 capability of any existing computer or cluster.
 Instead of a single particle, a macro-particle called pseudo-particle and
 designed like the material cell, is used in the Langmuir Feature Model.
 A pseudo-particle consists of 
\begin_inset Formula $N_{cell}$
\end_inset

 identical particles, which could be electorn, ions, neutals or even photons.
 Each pseudo-particle is assigned the properties of a single species and
 not dividable.
 The number density of a pseudo-particle matches the material cell so that
 any reactions occur between them are balanced and act as single-particle
 reactions.
\end_layout

\begin_layout Subsection
Particle Launch
\end_layout

\begin_layout Standard
In a time period 
\begin_inset Formula $T$
\end_inset

, the total launched pseudo-particles, 
\begin_inset Formula $N_{particle}\times N_{cell}$
\end_inset

, needs to match the total fluence, 
\begin_inset Formula $Flux\times Aera\times T$
\end_inset

, into the domain.
 In average, each pseudo-particle occupies a time duration of 
\begin_inset Formula 
\[
\Delta t=\dfrac{N_{cell}}{Flux\times Area}
\]

\end_inset

By considering the average velocity of the pseudo-particle and the domain
 of the feature, the life time of a pseudo-particle is about 
\begin_inset Formula 
\[
t_{life}=\dfrac{L\times N_{reflect}}{V_{particle}}
\]

\end_inset

where 
\begin_inset Formula $L$
\end_inset

 is the characterstic length of the domain, 
\begin_inset Formula $L<\sqrt{width^{2}+height^{2}}$
\end_inset

, 
\begin_inset Formula $N_{reflect}$
\end_inset

 is the number of reflections experienced by the pseudo-particle, 
\begin_inset Formula $N_{reflect}<10$
\end_inset

 for most scenarios, 
\begin_inset Formula $V_{particle}$
\end_inset

 is the average speed of the pseudo-particle, 
\begin_inset Formula $t_{life}$
\end_inset

 is the lifetime of a pseudo-particle.
 Let us put those numbers into an example case.
 
\begin_inset Formula $L=100\:nm$
\end_inset

 for a domain of 
\begin_inset Formula $100\:nm\times100\:nm$
\end_inset

, 
\begin_inset Formula $N_{reflect}=10$
\end_inset

, and 
\begin_inset Formula $V_{particle}=500\:m/s=500\:nm/ns$
\end_inset

 at room temperature.
 The resulting 
\begin_inset Formula $t_{life}=2\:ns$
\end_inset

 is far smaller than typical 
\begin_inset Formula $\Delta t=100\:ns$
\end_inset

.
 It means that a pseudo-particle is lauched and gets dead before next pseudo-par
ticle is launched, which indicates that no interaction of pseudo-particles
 is necessary to be taken into account.
 The only interacting object of a pseudo-particle is the material cell.
 The summary of the important assumptions can be seen as below:
\end_layout

\begin_layout Itemize
Pseudo-particles uniformly enter the feature.
 This indicates that each pseudo-particle occupies exact 
\begin_inset Formula $\Delta t$
\end_inset

, defined as above.
\end_layout

\begin_layout Itemize
A pseudo-particle entering the feature is a rare event.
 This implies that each pseudo-particle event is instantaneous compared
 to the time between incoming pseudo-particle.
 Pseudo-particles do not interact with each other.
\end_layout

\begin_layout Itemize
The number of total pseudo-particle entering the feature per area and per
 time is exactly the same as the flux.
 This ensures that the overall effects of total pseudo-particles well align
 with the physics requirements.
\end_layout

\begin_layout Standard
The first assumption can be argued as the real entering events could follow
 Poisson's distribution more than uniform distribution.
 Even under the assumption of Poisson's distribution, you could find the
 event of two pseudo-particles entering the feature with overlap in time
 is rare.
 Compared to millions of pseudo-particles launched in a simulation, the
 first two assumptions together still hold.
 
\end_layout

\begin_layout Subsection
Particle Tracking without E-field
\end_layout

\begin_layout Standard
In the serial version of Langmuir Feature Model, all pseudo-particles are
 launched in sequence and particle tracking is only applied to a single
 particle each time.
 In the terms of memory management, a memory space is created initially
 for a single pseudo-particle.
 When a pseudo-particle dies, a new pseudo-particle can reuse the memory
 space by updating the particle properties, such as position and velocity.
 The pseudo-particles are by default launched from the top boundary fo the
 domain.
 The initial position of pseudo-particle is randomly picked.
 The velocity vector, consisting of speed and angle w.r.t.
 
\begin_inset Formula $x=0^{+}$
\end_inset

, is chosen randomly from the given distribution.
 The given distribution could be either generated from the feature model
 itself, or from the IAEDF generated from the Langmuir Reactor Model.
 
\end_layout

\begin_layout Standard
Without E-field, a pseudo-particle is not accelerated during the flight.
 It means that the pseudo-particle follows the line–of-sight trajectory.
 Although the geometry is meshed to grids, the pseudo-particle advances
 in continous space.
 Newton's equations are solved for the trajectory,
\begin_inset Formula 
\[
\vec{r}=\vec{r}+\vec{v}\times dt
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\vec{v}$
\end_inset

 and 
\begin_inset Formula $\vec{r}$
\end_inset

 are the velocity and position of the pseudo-particle, respectively.
 
\begin_inset Formula $dt$
\end_inset

 is the flight timestep, which is far smaller than the simulation timestep.
 Instead of integrating over flight timestep 
\begin_inset Formula $dt$
\end_inset

, a advancing step, 
\begin_inset Formula $\Delta L$
\end_inset

 , is used in Langmuir Feature Model,
\begin_inset Formula 
\[
\vec{r}=\vec{r}+\vec{v}_{unit}\times\Delta L
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\vec{v}_{unit}$
\end_inset

 is the normalized unit vector of the velocity and 
\begin_inset Formula $\Delta L$
\end_inset

 is the advance step.
 Typical 
\begin_inset Formula $\Delta L$
\end_inset

 is constant and set to be about the resolution of the mesh.
 Larger 
\begin_inset Formula $\Delta L$
\end_inset

 definitely reduces the computing time.
 A varying 
\begin_inset Formula $\Delta L$
\end_inset

, which is determined by the position, can be used and will be discussed
 separately.
  
\end_layout

\end_body
\end_document
